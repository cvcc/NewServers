node-gyp
Node.js native addon build tool

node-gyp is a cross-platform command-line tool written in Node.js for compiling native addon modules for Node.js. It bundles the gyp project used by the Chromium team and takes away the pain of dealing with the various differences in build platforms. It is the replacement to the node-waf program which is removed for node v0.8. If you have a native addon for node that still has a wscript file, then you should definitely add a binding.gyp file to support the latest versions of node.

Multiple target versions of node are supported (i.e. 0.8, 0.9, 0.10, ..., 1.0, etc.), regardless of what version of node is actually installed on your system (node-gyp downloads the necessary development files for the target version).
Features:

    Easy to use, consistent interface
    Same commands to build your module on every platform
    Supports multiple target versions of Node

Installation

You can install with npm:

$ npm install -g node-gyp

You will also need to install:

    On Unix:
        python (v2.7 recommended, v3.x.x is not supported)
        make
        A proper C/C++ compiler toolchain, like GCC
    On Windows:
        Python (v2.7.3 recommended, v3.x.x is not supported)
            Make sure that you have a PYTHON environment variable, and it is set to drive:\path\to\python.exe not to a folder.
        Windows XP/Vista/7:
            Microsoft Visual Studio C++ 2013 (Express version works well)
                If the install fails, try uninstalling any C++ 2010 x64&x86 Redistributable that you have installed first.
                If you get errors that the 64-bit compilers are not installed you may also need the compiler update for the Windows SDK 7.1
        Windows 7/8:
            Microsoft Visual Studio C++ 2013 for Windows Desktop (Express version works well)
        All Windows Versions
            For 64-bit builds of node and native modules you will also need the Windows 7 64-bit SDK
            You may need to run one of the following commands if your build complains about WindowsSDKDir not being set, and you are sure you have already installed the SDK:

call "C:\Program Files\Microsoft SDKs\Windows\v7.1\bin\Setenv.cmd" /Release /x86
call "C:\Program Files\Microsoft SDKs\Windows\v7.1\bin\Setenv.cmd" /Release /x64

If you have multiple Python versions installed, you can identify which Python version node-gyp uses by setting the '--python' variable:

$ node-gyp --python /path/to/python2.7

If node-gyp is called by way of npm and you have multiple versions of Python installed, then you can set npm's 'python' config key to the appropriate value:

$ npm config set python /path/to/executable/python2.7

Note that OS X is just a flavour of Unix and so needs python, make, and C/C++. An easy way to obtain these is to install XCode from Apple, and then use it to install the command line tools (under Preferences -> Downloads).

$ npm install -g grunt-cli
$ npm install -g yo
$ npm install -g bower
$ npm install -g generator-angular-fullstack


yo angular-fullstack dashboard-app

$ grunt serve